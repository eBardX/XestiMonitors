disabled_rules:
  - inclusive_language
#  - no_fallthrough_only

opt_in_rules:
  - accessibility_label_for_image
  - anyobject_protocol
  - array_init
  - attributes
  - capture_variable
  - closure_body_length
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - conditional_returns_on_newline
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - convenience_type
  - discarded_notification_center_observer
  - discouraged_assert
  - discouraged_object_literal
  - empty_collection_literal
  - empty_count
  - empty_string
  - empty_xctest_method
  - enum_case_associated_values_count
  - expiring_todo
  - explicit_init
  - explicit_self
  - extension_access_modifier
  - fallthrough
  - fatal_error_message
  - file_header
  - file_name_no_space
  - first_where
  - flatmap_over_map_reduce
  - force_unwrapping
  - ibinspectable_in_extension
  - identical_operands
  - implicit_return
  - implicitly_unwrapped_optional
  - joined_default_parameter
  - last_where
  - legacy_multiple
  - let_var_whitespace
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - modifier_order
  - multiline_arguments
  - multiline_parameters
  - nimble_operator
  - nslocalizedstring_key
  - number_separator
  - object_literal
  - operator_usage_whitespace
  - optional_enum_case_matching
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - prefer_self_in_static_references
  - prefer_self_type_over_type_of_self
  - prefer_zero_over_explicit_init
  - private_action
  - private_outlet
  - private_subject
  - prohibited_super_call
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - raw_value_for_camel_cased_codable_enum
  - reduce_into
  - redundant_nil_coalescing
  - redundant_type_annotation
  - required_enum_case
  - return_value_from_void_function
  - single_test_class
  - sorted_first_last
  - sorted_imports
  - static_operator
  - strong_iboutlet
  - switch_case_on_newline
  - toggle_bool
  - trailing_closure
  - typesafe_array_init
  - unavailable_function
  - unneeded_parentheses_in_closure_argument
  - untyped_error_in_catch
  - unused_declaration
  - unused_import
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_between_cases
  - vertical_whitespace_closing_braces
  - weak_delegate
  - xct_specific_matcher
  - yoda_condition

# NOT opted in:
# - anonymous_argument_in_multiline_closure
# - balanced_xctest_lifecycle
# - discouraged_none_name
# - discouraged_optional_boolean
# - discouraged_optional_collection
# - explicit_acl
# - explicit_enum_raw_value -- WREAKS HAVOC WITH CodingKeys
# - explicit_top_level_acl -- FALSE POSITIVES ON PROTOCOL CONFORMANCE EXTENSIONS
# - explicit_type_interface
# - file_name
# - file_types_order
# - function_default_parameter_at_end
# - indentation_width
# - legacy_objc_type
# - missing_docs
# - multiline_arguments_brackets
# - multiline_function_chains
# - multiline_literal_brackets
# - multiline_parameters_brackets
# - no_extension_access_modifier
# - no_grouping_extension
# - nslocalizedstring_require_bundle
# - prefer_nimble
# - prefixed_toplevel_constant
# - prohibited_interface_builder
# - required_deinit
# - strict_fileprivate
# - test_case_accessibility
# - type_contents_order
# - unowned_variable_capture
# - vertical_whitespace_opening_braces

included:
  - Sources
  - Tests

reporter: "xcode"

#attributes:
#  always_on_line_above:
#    - "@objc"
#  always_on_same_line:
#    - "@IBAction"
#    - "@IBOutlet"
closure_body_length:
  warning: 40
  error: 60
#colon:
#  apply_to_dictionaries: true
#  flexible_right_spacing: false
cyclomatic_complexity:
  warning: 10
  error: 20
  ignores_case_statements: true
#dynamic_inline: warning
#empty_count:
#  only_after_dot: true
#  severity: warning
file_length:
  warning: 400
  error: 500
  ignore_comment_only_lines: true
function_body_length:
  warning: 100
  error: 200
function_parameter_count:
  warning: 8
  error: 10
identifier_name:
  max_length: 50
  min_length: 1
large_tuple:
  warning: 3
  error: 4
line_length:
  warning: 150
  ignores_comments: true
  ignores_function_declarations: false
  ignores_urls: true
#multiline_arguments:
#  first_argument_location: same_line
#nesting:
#  function_level: 5
#  type_level: 2
#number_separator:
#  minimum_length: 0
#object_literal:
#  color_literal: true
#  image_literal: true
#private_outlet:
#  allow_private_set: false
#private_over_fileprivate:
#  validate_extensions: true
#shorthand_operator: warning
#superfluous_disable_command: warning
#trailing_comma:
#  mandatory_comma: false
#trailing_whitespace:
#  ignores_comments: false
#  ignores_empty_lines: false
#type_body_length:
#  warning: 200
#  error: 300
#type_name:
#  max_length: 50
#unused_optional_binding:
#  ignore_optional_try: false
vertical_whitespace:
  max_empty_lines: 1

#custom_rules:
#  closing_brace_whitespace:
#    regex: '(?:\n| {2,})\}\)? *\n *[^ \n\})\]#]'
#    name: "Closing Brace Whitespace"
#    message: "Empty line required after closing curly braces if code with same indentation follows."
#    severity: warning
#  empty_line_after_opening_brace:
#    regex: '\{[^\n}]*\n\s*\n(?!\s*\/\/\s*MARK:)'
#    name: "Empty Line After Opening Brace"
#    message: "Don't put an empty line after an opening curly brace."
#    severity: warning
#  empty_line_before_closing_brace:
#    regex: '\n\s*\n\s*\}'
#    name: "Empty Line Before Closing Brace"
#    message: "Don't put an empty line before a closing curly brace."
#    severity: warning
#  late_force_unwrapping:
#    regex: '\(\S+\?\.\S+\)!'
#    name: "Late Force Unwrapping"
#    message: "Don't use ? first to force unwrap later – directly unwrap within the parantheses."
#    severity: warning
#  multiple_closure_params:
#    regex: '\} *\) *\{'
#    name: "Multiple Closure Params"
#    message: "Don't use multiple in-line closures – save one or more of them to variables instead."
#    severity: warning
#  single_line_return:
#    regex: '\.\S+ *\{(?: *return|[^\n\}]+ in return) [^\}]+\}'
#    name: "Single Line Return"
#    message: "Remove the 'return' when returning from a single line closure."
#    severity: warning
#  space_before_comment:
#    regex: '\n[ ]{0}[^\/ \n#][^\n]*\n[ ]{0}\/\/|\n[ ]{4}[^\/ \n#][^\n]*\n[ ]{4}\/\/|\n[ ]{8}[^\/ \n#][^\n]*\n[ ]{8}\/\/|\n[ ]{16}[^\/ \n#][^\n]*\n[ ]{16}\/\/|\n[ ]{20}[^\/ \n#][^\n]*\n[ ]{20}\/\/|\n[ ]{24}[^\/ \n#][^\n]*\n[ ]{24}\/\/'
#    name: "Space Before Comment"
#    message: "Always put a space line before a comment line and always comment code beforehand."
#    severity: warning
#  unnecessary_case_break:
#    regex: '(case |default)(?:[^\n\}]+\n){2,}\s*break *\n|\n *\n *break(?:\n *\n|\n *\})'
#    name: "Unnecessary Case Break"
#    message: "Don't use break in switch cases – Swift breaks by default."
#    severity: warning
#  unnecessary_nil_assignment:
#    regex: 'var \S+\s*:\s*[^\s]+\?\s*=\s*nil'
#    name: "Unnecessary Nil Assignment"
#    message: "Don't assign nil as a value when defining an optional type – it's nil by default."
#    severity: warning
#  vertical_whitespaces_around_mark:
#    regex: '\/\/\s*MARK:[^\n]*(\n)(?!\n)|(\n\n\n)[ \t]*\/\/\s*MARK:|[^\s{]\n[^\n\/]*\/\/\s*MARK:'
#    name: "Vertical Whitespaces Around MARK:"
#    message: "Include a single vertical whitespace (empty line) before and after MARK: comments."
#    severity: warning
#  whitespace_comment_start:
#    regex: '[^:#][^:#]\/\/[^\s\/]'
#    name: "Whitespace Comment Start"
#    message: "A comment should always start with a whitespace."
#    severity: warning
