#disabled_rules:
#  - large_tuple
#  - nesting

opt_in_rules:
  - array_init
  - attributes
  - closure_spacing
  - conditional_returns_on_newline
  - contains_over_first_not_nil
  - empty_count
  - explicit_enum_raw_value
  - explicit_init
  - explicit_top_level_acl
  - extension_access_modifier
  - fatal_error_message
  - file_header
  - first_where
  - force_unwrapping
  - implicit_return
  - implicitly_unwrapped_optional
  - joined_default_parameter
  - let_var_whitespace
  - literal_expression_end_indentation
  - multiline_arguments
  - multiline_parameters
  - nimble_operator
  - number_separator
  - object_literal
  - operator_usage_whitespace
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - private_outlet
  - prohibited_super_call
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - redundant_nil_coalescing
  - single_test_class
  - sorted_first_last
  - sorted_imports
  - switch_case_on_newline
  - trailing_closure
  - unneeded_parentheses_in_closure_argument
  - vertical_parameter_alignment_on_call

included:
  - Tests
  - XestiMonitors
  - ../Source

excluded:
  - Example/Pods

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: warning # implicitly
force_try:
  severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
line_length: 150
# they can set both implicitly with an array
type_body_length:
  - 150 # warning
  - 250 # error
# or they can set both explicitly
file_length:
  warning: 450
  error: 500
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 1     # only warning
  max_length:       # warning and error
    warning: 40
    error: 50
identifier_name:
  min_length: 1     # only min_length
reporter: "xcode"

custom_rules:
  closing_brace_whitespace:
    regex: '(?:\n| {2,})\}\)? *\n *[^ \n\})\]]'
    name: "Closing Brace Whitespace"
    message: "Empty line required after closing curly braces if code with same indentation follows."
    severity: warning
  late_force_unwrapping:
    regex: '\(\S+\?\.\S+\)!'
    name: "Late Force Unwrapping"
    message: "Don't use ? first to force unwrap later – directly unwrap within the parantheses."
    severity: warning
  multiple_closure_params:
    regex: '\} *\) *\{'
    name: "Multiple Closure Params"
    message: "Don't use multiple in-line closures – save one or more of them to variables instead."
    severity: warning
  single_line_return:
    regex: '\.\S+ *\{(?: *return|[^\n\}]+ in return) [^\}]+\}'
    name: "Single Line Return"
    message: "Remove the 'return' when returning from a single line closure."
    severity: warning
  space_before_comment:
    regex: '\n[ ]{0}[^\/ \n][^\n]*\n[ ]{0}\/\/|\n[ ]{4}[^\/ \n][^\n]*\n[ ]{4}\/\/|\n[ ]{8}[^\/ \n][^\n]*\n[ ]{8}\/\/|\n[ ]{16}[^\/ \n][^\n]*\n[ ]{16}\/\/|\n[ ]{20}[^\/ \n][^\n]*\n[ ]{20}\/\/|\n[ ]{24}[^\/ \n][^\n]*\n[ ]{24}\/\/'
    name: "Space Before Comment"
    message: "Always put a space line before a comment line and always comment code beforehand."
    severity: warning
  unnecessary_case_break:
    regex: '(case |default)(?:[^\n\}]+\n){2,}\s*break *\n|\n *\n *break(?:\n *\n|\n *\})'
    name: "Unnecessary Case Break"
    message: "Don't use break in switch cases – Swift breaks by default."
    severity: warning
  unnecessary_nil_assignment:
    regex: 'var \S+\s*:\s*[^\s]+\?\s*=\s*nil'
    name: "Unnecessary Nil Assignment"
    message: "Don't assign nil as a value when defining an optional type – it's nil by default."
    severity: warning
  vertical_whitespaces_around_mark:
    regex: '\/\/\s*MARK:[^\n]*(\n)(?!\n)|(\n\n\n)[ \t]*\/\/\s*MARK:|[^\s{]\n[^\n\/]*\/\/\s*MARK:'
    name: "Vertical Whitespaces Around MARK:"
    message: "Include a single vertical whitespace (empty line) before and after MARK: comments."
    severity: warning
  whitespace_comment_start:
    regex: '[^:#][^:#]\/\/[^\s\/]'
    name: "Whitespace Comment Start"
    message: "A comment should always start with a whitespace."
    severity: warning
